@using MegaDesk;

@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Edit Quote";

    var customerName = "";
    var width = 0;
    var depth = 0;
    var drawers = 0;
    var surfaceMaterial = "";
    var shippingSpeed = "";
    var date = DateTime.Now;
    var total = 0.00m;
    var quoteId = "";

    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            quoteId = Request.QueryString["ID"];
            var db = Database.Open("QuoteDB");
            var dbCommand = "SELECT [q].[Id], [q].[Date], [q].[CustomerName], [q].[Total], [d].[Width], [d].[Depth], [d].[Drawers], [sf].[Material] AS SurfaceMaterial, [q].[ShippingSpeed]" +
                            "FROM [Quotes] [q] JOIN [Desk] [d] ON [d].[Id] = [q].[DeskId]" +
                            "JOIN [SurfaceMaterial] [sf] ON [sf].[Id] = [d].[SurfaceMaterialId]" +
                            "WHERE [q].[Id] = @0";
            var row = db.QuerySingle(dbCommand, quoteId);

            if (row != null)
            {
                customerName = row.CustomerName;
                date = row.Date;
                width = row.Width;
                depth = row.Depth;
                drawers = row.Drawers;
                surfaceMaterial = row.SurfaceMaterial;
                shippingSpeed = row.ShippingSpeed;
                total = row.Total;
            }
            else
            {
                Validation.AddFormError("No quote was selected.");
            }
        }
        else
        {
            Validation.AddFormError("No quote was selected.");
        }
    }

    if (IsPost)
    {
        Validation.RequireField("customerName", "You must enter a customer name");
        Validation.RequireField("width", "Width is required");
        Validation.RequireField("depth", "Depth is required");
        Validation.RequireField("drawers", "Drawers are required");
        Validation.RequireField("surfaceMaterial", "A surface material is required");
        Validation.RequireField("shippingSpeed", "A shipping speed is required");
        Validation.RequireField("quoteId", "No quote ID was submitted!");

        quoteId = Request.QueryString["ID"];

        Desk desk = new Desk
        {
            Width = Int32.Parse(Request.Form["width"]),
            Depth = Int32.Parse(Request.Form["depth"]),
            Drawers = Int32.Parse(Request.Form["drawers"]),
            SurfaceMaterial = Request.Form["surfaceMaterial"]
        };

        DeskQuote deskQuote = new DeskQuote
        {
            Desk = desk,
            CustomerName = Request.Form["customerName"],
            ShippingSpeed = Request.Form["shippingSpeed"],
            QuoteDate = DateTime.Now,
        };

        if (Validation.IsValid())
        {
            var db = Database.Open("QuoteDB");
            // get surface material id
            var dbCommand = "SELECT Id FROM SurfaceMaterial WHERE Material = @0";
            var surfaceMaterialId = db.QueryValue(dbCommand, desk.SurfaceMaterial);
            /* Find desk id in Desk database */
            // check if edited desk specification already exists
            dbCommand = "SELECT Id FROM Desk WHERE SurfaceMaterialId = @0 AND Width = @1 AND Depth = @2 AND Drawers = @3";
            var result = db.QueryValue(dbCommand, surfaceMaterialId, desk.Width, desk.Depth, desk.Drawers);
            var insertCommand = "";
            if (result == null)
            {
                // insert a new desk spec
                insertCommand = "INSERT INTO Desk (Width, Depth, Drawers, SurfaceMaterialId) Values(@0, @1, @2, @3)";
                db.Execute(insertCommand, desk.Width, desk.Depth, desk.Drawers, surfaceMaterialId);
            }
            // get desk id
            dbCommand = "SELECT Id FROM Desk WHERE SurfaceMaterialId = @0 AND Width = @1 AND Depth = @2 AND Drawers = @3";
            var deskId = db.QueryValue(dbCommand, surfaceMaterialId, desk.Width, desk.Depth, desk.Drawers);
            /* Update quote in Quotes database */
            // update quote
            var updateCommand = "UPDATE Quotes SET ShippingSpeed = @0, CustomerName = @1, Date = @2, Total = @3, DeskId = @4 WHERE Id = @5";
            db.Execute(updateCommand, deskQuote.ShippingSpeed, deskQuote.CustomerName, DateTime.Now, deskQuote.CalculateQuote(), deskId, Int32.Parse(quoteId));
            Response.Redirect("~/ViewQuotes");
        }
    }
}

<h1>Edit Quote</h1>
@Html.ValidationSummary()
<form method="post">
    <fieldset>
        <legend>Order Desk Information</legend>
        <p>
            <label for="customerName">Name:</label>
            <input type="text" name="customerName" value="@customerName"/>
        </p>
        <p>
            <label for="width">Width:</label>
            <input type="number" name="width" value="@width" min="24" max="96"/>
        </p>
        <p>
            <label for="depth">Depth:</label>
            <input type="number" name="depth" value="@depth" min="12" max="48"/>
        </p>
        <p>
            <label for="drawers">Number of Drawers:</label>
            <input type="number" name="drawers" value="@drawers" min="0" max="7"/>
        </p>
        <p>
            <label for="surfaceMaterial">Surface Material:</label>
            <select name="surfaceMaterial">
                <option value="@surfaceMaterial" selected hidden>@surfaceMaterial</option>
                <option value="laminate">Laminate</option>
                <option value="oak">Oak</option>
                <option value="rosewood">Rosewood</option>
                <option value="veneer">Veneer</option>
                <option value="pine">Pine</option>
            </select>
        </p>
        <p>
            <label for="shippingSpeed">Shipping Speed:</label>
            <select name="shippingSpeed">
                <option value="@shippingSpeed" selected hidden>@shippingSpeed</option>
                <option value="Rush: 3 Days">Rush: 3 Days</option>
                <option value="Rush: 5 Days">Rush: 5 Days</option>
                <option value="Rush: 7 Days">Rush: 7 Days</option>
                <option value="Standard: 14 Days">Standard: 14 Days</option>
            </select>
        </p>
        <p>
            <label for="date">Date:</label>
            <div id="date">@DateTime.Now</div>
        </p>
        <p>
            <label for="total">Total:</label>
            <div id="total">@total</div>
        </p>
        <p>
            <input type="hidden" name="quoteId" value="@quoteId" />
        </p>
        <p><input type="submit" name="buttonSubmit" value="Save Quote" /></p>
    </fieldset>
    <p><a href="~/ViewQuotes.cshtml">Return to list of Quotes</a></p>
</form>
